//there are total 95 characters generating keys i.e (fired by keypress event) 32 to 126
let unicode = [
  '\u0020', // SPACE
  '\u0021', // ! -> !
  '\u0022', // " -> "
  '\u0023', // # -> #
  '\u0024', // $ -> $
  '\u0025', // % -> %
  '\u0026', // & -> &
  '\u0027', // ' -> '
  '\u0028', // ( -> (
  '\u0029', // ) -> )
  '\u002A', // * -> *
  '\u200C', // + -> ZWNJ
  '\u002C', // , -> ,
  '\u002D', // - -> -
  '\u0964', // . -> ।
  '\u094D', // / -> ्

  '\u0966', // 0 -> ०
  '\u0967', // 1 -> १
  '\u0968', // 2 -> २
  '\u0969', // 3 -> ३
  '\u096A', // 4 -> ४
  '\u096B', // 5 -> ५
  '\u096C', // 6 -> ६
  '\u096D', // 7 -> ७
  '\u096E', // 8 -> ८
  '\u096F', // 9 -> ९

  '\u003B', // ; -> ;
  '\u003A', // : -> :
  '\u0919', // < -> ङ
  '\u200D', // = -> ZWJ
  '\u0965', // > -> ॥
  '\u003F', // ? -> ?
  '\u0040', // @ -> @

  '\u0906', // A -> आ 65
  '\u092D', // B -> भ
  '\u091A', // C -> च
  '\u0927', // D -> ध
  '\u0948', // E -> ै
  '\u090A', // F -> ऊ
  '\u0918', // G -> घ
  '\u0905', // H -> अ
  '\u0940', // I -> ी
  '\u091D', // J -> झ
  '\u0916', // K -> ख
  '\u0933', // L -> ळ
  '\u0902', // M -> ं
  '\u0923', // N -> ण
  '\u0913', // O -> ओ
  '\u092B', // P -> फ
  '\u0920', // Q -> ठ
  '\u0943', // R -> ृ
  '\u0936', // S -> श
  '\u0925', // T -> थ
  '\u0942', // U -> ू
  '\u0901', // V -> ँ
  '\u0914', // W -> औ
  '\u0922', // X -> ढ
  '\u091E', // Y -> ञ
  '\u090B', // Z -> ऋ 90

  '\u0907', // [ -> इ
  '\u0950', // \ -> ॐ
  '\u090F', // ] -> ए
  '\u005E', // ^ -> ^
  '\u0952', // _ ->"॒"
  '\u093D', // ` -> ऽ

  '\u093E', // a -> ा  97
  '\u092C', // b -> ब
  '\u091B', // c -> छ
  '\u0926', // d -> द
  '\u0947', // e -> े
  '\u0909', // f -> उ
  '\u0917', // g -> ग
  '\u0939', // h -> ह
  '\u093F', // i -> ि
  '\u091C', // j -> ज
  '\u0915', // k -> क
  '\u0932', // l -> ल
  '\u092E', // m -> म
  '\u0928', // n -> न
  '\u094B', // o -> ो
  '\u092A', // p -> प
  '\u091F', // q -> ट
  '\u0930', // r -> र
  '\u0938', // s -> स
  '\u0924', // t -> त
  '\u0941', // u -> ु
  '\u0935', // v -> व
  '\u094C', // w -> ौ
  '\u0921', // x -> ड
  '\u092F', // y -> य
  '\u0937', // z -> ष 122

  '\u0908', // { -> ई
  '\u0903', // | -> ः
  '\u0910', // } -> ऐ
  '\u093C' // ~ -> "़"
];

let preeti = [
  '\u0020',
  '\u0967',
  '\u0942',
  '\u0969',
  '\u096A',
  '\u096B',
  '\u096D',
  '\u0941',
  '\u096F',
  '\u0966',
  '\u096E',
  '\u0971',
  '\u002C',
  '\u0028',
  '\u0964',
  '\u0930',
  '\u0923',
  '\u091C' + '\u094D' + '\u091E',
  '\u0926' + '\u094D' + '\u0926',
  '\u0918',
  '\u0926' + '\u094D' + '\u0927',
  '\u091B',
  '\u091F',
  '\u0920',
  '\u0921',
  '\u0922',
  '\u0938' + '\u094D',
  '\u0938',
  '\u003F',
  '\u0902',
  '\u0936' + '\u094D' + '\u0930',
  '\u0930' + '\u0942',
  '\u0968',
  '\u092C' + '\u094D',
  '\u0926' + '\u094D' + '\u092F',
  '\u090B',
  '\u092E' + '\u094D',
  '\u092D' + '\u094D',
  '\u0901',
  '\u0928' + '\u094D',
  '\u091C' + '\u094D',
  '\u0915' + '\u094D' + '\u0937' + '\u094D',
  '\u0935' + '\u094D',
  '\u092A' + '\u094D',
  '\u0940',
  '\u003A',
  '\u0932' + '\u094D',
  '\u0907',
  '\u090F',
  '\u0924' + '\u094D' + '\u0924',
  '\u091A' + '\u094D',
  '\u0915' + '\u094D',
  '\u0924' + '\u094D',
  '\u0917' + '\u094D',
  '\u0916' + '\u094D',
  '\u0927' + '\u094D',
  '\u0939' + '\u094D',
  '\u0925' + '\u094D',
  '\u0936' + '\u094D',
  '\u0943',
  '\u094D',
  '\u0947',
  '\u096C',
  '\u0029',
  '\u091E',
  '\u092C',
  '\u0926',
  '\u0905',
  '\u092E',
  '\u092D',
  '\u093E',
  '\u0928',
  '\u091C',
  '\u0937' + '\u094D',
  '\u0935',
  '\u092A',
  '\u093F',
  '\u093D',
  '\u0932',
  '\u092F',
  '\u0909',
  '\u0924' + '\u094D' + '\u0930',
  '\u091A',
  '\u0915',
  '\u0924',
  '\u0917',
  '\u0916',
  '\u0927',
  '\u0939',
  '\u0925',
  '\u0936',
  '\u0930' + '\u094D',
  '\u094D' + '\u0930',
  '\u0948',
  '\u091E' + '\u094D'
];

// Return the unicode of the key passed
function mapper(keyCode, array) {
  return array[keyCode - 32];
}

// Wrapper function for the keymap function
window.romanized = keyCode => {
  return mapper(keyCode, unicode);
};

window.traditional = keyCode => {
  return mapper(keyCode, preeti);
};
